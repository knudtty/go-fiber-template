networks:
  go_fiber_template:
    name: go_fiber_template
    attachable: true

services:
  db:
    image: timescale/timescaledb-ha:pg16-ts2.16-all
    volumes:
      - ./postgres_data:/home/postgres/pgdata/data:rwx
      - ./:/home/postgres/workdir
      - ./postgres_init.bash:/docker-entrypoint-initdb.d/init-user-db.sh:rwx
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    env_file: .env
    user: postgres
    networks:
      - go_fiber_template
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${DB_NAME}", "-u", "${DB_USER}"]
      interval: 1s
      timeout: 5s
      retries: 15

  redis:
    image: redis:7.4-alpine
    restart: always
    networks:
      - go_fiber_template
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 1s
      timeout: 5s
      retries: 10

  migrate:
    image: migrate/migrate:latest
    volumes:
      - ./platform/migrations:/migrations
    networks:
      - go_fiber_template
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
    command: -path=/migrations -database=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=disable up

  my_project:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file: .env
    environment:
      DOCKER_ENV: "true"
    ports:
      - "3000:3000"
    networks:
      - go_fiber_template
    links:
      - db
      - redis
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
